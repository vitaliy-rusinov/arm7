


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* LPC2300.S: Startup file for Philips LPC2300 device s
                       eries                 */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2007 Keil - An ARM Company. All rights
                        reserved.            */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The LPC2300.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  NO_CLOCK_SETUP: when set the startup code will not 
                       initialize Clock 
   20 00000000         ; *  (used mostly when clock is already initialized from
                        script .ini 
   21 00000000         ; *  file).
   22 00000000         ; *
   23 00000000         ; *  NO_EMC_SETUP: when set the startup code will not in
                       itializes External 
   24 00000000         ; *  Memory Controller (used mostly when external memory
                        is already initialized 
   25 00000000         ; *  and loaded from script .ini file).
   26 00000000         ; *
   27 00000000         ; *  RAM_INTVEC: when set the startup code copies except
                       ion vectors 
   28 00000000         ; *  from on-chip Flash to on-chip RAM.
   29 00000000         ; *
   30 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   31 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   32 00000000         ; *  startup and interrupt vectors are remapped from:
   33 00000000         ; *     0x00000000  default setting (not remapped)
   34 00000000         ; *     0x40000000  when RAM_MODE is used
   35 00000000         ; *     0x80000000  when EXTMEM_MODE is used
   36 00000000         ; *
   37 00000000         ; *  EXTMEM_MODE: when set the device is configured for 
                       code execution
   38 00000000         ; *  from external memory starting at address 0x80000000



ARM Macro Assembler    Page 2 


                       .
   39 00000000         ; *
   40 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   41 00000000         ; *  from on-chip RAM starting at address 0x40000000. 
   42 00000000         ; */
   43 00000000         
   44 00000000         
   45 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   46 00000000         
   47 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   48 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   49 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   50 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   51 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   52 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   53 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   54 00000000         
   55 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   56 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   57 00000000         
   58 00000000         
   59 00000000         ;----------------------- Memory Definitions ------------
                       ------------------------
   60 00000000         
   61 00000000         ; Internal Memory Base Addresses
   62 00000000 00000000 
                       FLASH_BASE
                               EQU              0x00000000
   63 00000000 40000000 
                       RAM_BASE
                               EQU              0x40000000
   64 00000000 80000000 
                       EXTMEM_BASE
                               EQU              0x80000000
   65 00000000         
   66 00000000         ; External Memory Base Addresses
   67 00000000 80000000 
                       STA_MEM0_BASE
                               EQU              0x80000000



ARM Macro Assembler    Page 3 


   68 00000000 81000000 
                       STA_MEM1_BASE
                               EQU              0x81000000
   69 00000000         
   70 00000000         
   71 00000000         ;----------------------- Stack and Heap Definitions ----
                       ------------------------
   72 00000000         
   73 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   74 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   75 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   76 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   77 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   78 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   79 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   80 00000000         ;// </h>
   81 00000000         
   82 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   83 00000000 00000008 
                       SVC_Stack_Size
                               EQU              0x00000008
   84 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   85 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   86 00000000 00000100 
                       IRQ_Stack_Size
                               EQU              0x00000100
   87 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   88 00000000         
   90 00000000 00000108 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   91 00000000         
   92 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   93 00000000         
   94 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   95 00000400         __initial_sp
                               SPACE            ISR_Stack_Size
   96 00000508         
   97 00000508         Stack_Top
   98 00000508         
   99 00000508         
  100 00000508         ;// <h> Heap Configuration
  101 00000508         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
  102 00000508         ;// </h>
  103 00000508         
  104 00000508 00000100 
                       Heap_Size



ARM Macro Assembler    Page 4 


                               EQU              0x00000100
  105 00000508         
  106 00000508                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
  107 00000000         __heap_base
  108 00000000         Heap_Mem
                               SPACE            Heap_Size
  109 00000100         __heap_limit
  110 00000100         
  111 00000100         
  112 00000100         ;----------------------- System Control Block (SCB) Modu
                       le Definitions ---------
  113 00000100         
  114 00000100 E01FC000 
                       SCB_BASE
                               EQU              0xE01FC000  ; SCB Base Address
  115 00000100 00000080 
                       PLLCON_OFS
                               EQU              0x80        ; PLL Control Offse
                                                            t
  116 00000100 00000084 
                       PLLCFG_OFS
                               EQU              0x84        ; PLL Configuration
                                                             Offset
  117 00000100 00000088 
                       PLLSTAT_OFS
                               EQU              0x88        ; PLL Status Offset
                                                            
  118 00000100 0000008C 
                       PLLFEED_OFS
                               EQU              0x8C        ; PLL Feed Offset
  119 00000100 00000104 
                       CCLKCFG_OFS
                               EQU              0x104       ; CPU Clock Divider
                                                             Reg Offset
  120 00000100 00000108 
                       USBCLKCFG_OFS
                               EQU              0x108       ; USB Clock Divider
                                                             Reg Offset
  121 00000100 0000010C 
                       CLKSRCSEL_OFS
                               EQU              0x10C       ; Clock Source Sele
                                                            ct Reg Offset
  122 00000100 000001A0 
                       SCS_OFS EQU              0x1A0       ; System Control an
                                                            d Status Reg Offset
                                                            
  123 00000100 000001A8 
                       PCLKSEL0_OFS
                               EQU              0x1A8       ; Peripheral Clock 
                                                            Select Reg 0 Offset
                                                            
  124 00000100 000001AC 
                       PCLKSEL1_OFS
                               EQU              0x1AC       ; Peripheral Clock 
                                                            Select Reg 1 Offset
                                                            
  125 00000100         
  126 00000100 000000C0 



ARM Macro Assembler    Page 5 


                       PCON_OFS
                               EQU              0x0C0       ; Power Mode Contro
                                                            l Reg Offset
  127 00000100 000000C4 
                       PCONP_OFS
                               EQU              0x0C4       ; Power Control for
                                                             Periphs Reg Offset
                                                            
  128 00000100         
  129 00000100         ; Constants
  130 00000100 00000010 
                       OSCRANGE
                               EQU              (1<<4)      ; Oscillator Range 
                                                            Select
  131 00000100 00000020 
                       OSCEN   EQU              (1<<5)      ; Main oscillator E
                                                            nable
  132 00000100 00000040 
                       OSCSTAT EQU              (1<<6)      ; Main Oscillator S
                                                            tatus
  133 00000100 00000001 
                       PLLCON_PLLE
                               EQU              (1<<0)      ; PLL Enable
  134 00000100 00000002 
                       PLLCON_PLLC
                               EQU              (1<<1)      ; PLL Connect
  135 00000100 00007FFF 
                       PLLSTAT_M
                               EQU              (0x7FFF<<0) ; PLL M Value
  136 00000100 00FF0000 
                       PLLSTAT_N
                               EQU              (0xFF<<16)  ; PLL N Value
  137 00000100 04000000 
                       PLLSTAT_PLOCK
                               EQU              (1<<26)     ; PLL Lock Status
  138 00000100         
  139 00000100         ;// <e> Clock Setup
  140 00000100         ;//   <h> System Controls and Status Register (SCS)
  141 00000100         ;//     <o1.4>    OSCRANGE: Main Oscillator Range Select
                       
  142 00000100         ;//                     <0=>  1 MHz to 20 MHz
  143 00000100         ;//                     <1=> 15 MHz to 24 MHz
  144 00000100         ;//     <e1.5>       OSCEN: Main Oscillator Enable
  145 00000100         ;//     </e>
  146 00000100         ;//   </h>
  147 00000100         ;//
  148 00000100         ;//   <h> Clock Source Select Register (CLKSRCSEL)
  149 00000100         ;//     <o2.0..1>   CLKSRC: PLL Clock Source Selection
  150 00000100         ;//                     <0=> Internal RC oscillator
  151 00000100         ;//                     <1=> Main oscillator
  152 00000100         ;//                     <2=> RTC oscillator
  153 00000100         ;//   </h>
  154 00000100         ;//
  155 00000100         ;//   <h> PLL Configuration Register (PLLCFG)
  156 00000100         ;//                     <i> PLL_clk = (2* M * PLL_clk_sr
                       c) / N
  157 00000100         ;//     <o3.0..14>    MSEL: PLL Multiplier Selection
  158 00000100         ;//                     <1-32768><#-1>
  159 00000100         ;//                     <i> M Value



ARM Macro Assembler    Page 6 


  160 00000100         ;//     <o3.16..23>   NSEL: PLL Divider Selection
  161 00000100         ;//                     <1-256><#-1>
  162 00000100         ;//                     <i> N Value
  163 00000100         ;//   </h>
  164 00000100         ;//
  165 00000100         ;//   <h> CPU Clock Configuration Register (CCLKCFG)
  166 00000100         ;//     <o4.0..7>  CCLKSEL: Divide Value for CPU Clock f
                       rom PLL
  167 00000100         ;//                     <2-256:2><#-1>
  168 00000100         ;//   </h>
  169 00000100         ;//
  170 00000100         ;//   <h> USB Clock Configuration Register (USBCLKCFG)
  171 00000100         ;//     <o5.0..3>   USBSEL: Divide Value for USB Clock f
                       rom PLL
  172 00000100         ;//                     <1-16><#-1>
  173 00000100         ;//   </h>
  174 00000100         ;//
  175 00000100         ;//   <h> Peripheral Clock Selection Register 0 (PCLKSEL
                       0)
  176 00000100         ;//     <o6.0..1>      PCLK_WDT: Peripheral Clock Select
                       ion for WDT
  177 00000100         ;//                     <0=> Pclk = Cclk / 4
  178 00000100         ;//                     <1=> Pclk = Cclk
  179 00000100         ;//                     <2=> Pclk = Cclk / 2
  180 00000100         ;//                     <3=> Pclk = Hclk / 8
  181 00000100         ;//     <o6.2..3>   PCLK_TIMER0: Peripheral Clock Select
                       ion for TIMER0
  182 00000100         ;//                     <0=> Pclk = Cclk / 4
  183 00000100         ;//                     <1=> Pclk = Cclk
  184 00000100         ;//                     <2=> Pclk = Cclk / 2
  185 00000100         ;//                     <3=> Pclk = Hclk / 8
  186 00000100         ;//     <o6.4..5>   PCLK_TIMER1: Peripheral Clock Select
                       ion for TIMER1
  187 00000100         ;//                     <0=> Pclk = Cclk / 4
  188 00000100         ;//                     <1=> Pclk = Cclk
  189 00000100         ;//                     <2=> Pclk = Cclk / 2
  190 00000100         ;//                     <3=> Pclk = Hclk / 8
  191 00000100         ;//     <o6.6..7>    PCLK_UART0: Peripheral Clock Select
                       ion for UART0
  192 00000100         ;//                     <0=> Pclk = Cclk / 4
  193 00000100         ;//                     <1=> Pclk = Cclk
  194 00000100         ;//                     <2=> Pclk = Cclk / 2
  195 00000100         ;//                     <3=> Pclk = Hclk / 8
  196 00000100         ;//     <o6.8..9>    PCLK_UART1: Peripheral Clock Select
                       ion for UART1
  197 00000100         ;//                     <0=> Pclk = Cclk / 4
  198 00000100         ;//                     <1=> Pclk = Cclk
  199 00000100         ;//                     <2=> Pclk = Cclk / 2
  200 00000100         ;//                     <3=> Pclk = Hclk / 8
  201 00000100         ;//     <o6.10..11>   PCLK_PWM0: Peripheral Clock Select
                       ion for PWM0
  202 00000100         ;//                     <0=> Pclk = Cclk / 4
  203 00000100         ;//                     <1=> Pclk = Cclk
  204 00000100         ;//                     <2=> Pclk = Cclk / 2
  205 00000100         ;//                     <3=> Pclk = Hclk / 8
  206 00000100         ;//     <o6.12..13>   PCLK_PWM1: Peripheral Clock Select
                       ion for PWM1
  207 00000100         ;//                     <0=> Pclk = Cclk / 4
  208 00000100         ;//                     <1=> Pclk = Cclk



ARM Macro Assembler    Page 7 


  209 00000100         ;//                     <2=> Pclk = Cclk / 2
  210 00000100         ;//                     <3=> Pclk = Hclk / 8
  211 00000100         ;//     <o6.14..15>   PCLK_I2C0: Peripheral Clock Select
                       ion for I2C0
  212 00000100         ;//                     <0=> Pclk = Cclk / 4
  213 00000100         ;//                     <1=> Pclk = Cclk
  214 00000100         ;//                     <2=> Pclk = Cclk / 2
  215 00000100         ;//                     <3=> Pclk = Hclk / 8
  216 00000100         ;//     <o6.16..17>    PCLK_SPI: Peripheral Clock Select
                       ion for SPI
  217 00000100         ;//                     <0=> Pclk = Cclk / 4
  218 00000100         ;//                     <1=> Pclk = Cclk
  219 00000100         ;//                     <2=> Pclk = Cclk / 2
  220 00000100         ;//                     <3=> Pclk = Hclk / 8
  221 00000100         ;//     <o6.18..19>    PCLK_RTC: Peripheral Clock Select
                       ion for RTC
  222 00000100         ;//                     <0=> Pclk = Cclk / 4
  223 00000100         ;//                     <1=> Pclk = Cclk
  224 00000100         ;//                     <2=> Pclk = Cclk / 2
  225 00000100         ;//                     <3=> Pclk = Hclk / 8
  226 00000100         ;//     <o6.20..21>   PCLK_SSP1: Peripheral Clock Select
                       ion for SSP1
  227 00000100         ;//                     <0=> Pclk = Cclk / 4
  228 00000100         ;//                     <1=> Pclk = Cclk
  229 00000100         ;//                     <2=> Pclk = Cclk / 2
  230 00000100         ;//                     <3=> Pclk = Hclk / 8
  231 00000100         ;//     <o6.22..23>    PCLK_DAC: Peripheral Clock Select
                       ion for DAC
  232 00000100         ;//                     <0=> Pclk = Cclk / 4
  233 00000100         ;//                     <1=> Pclk = Cclk
  234 00000100         ;//                     <2=> Pclk = Cclk / 2
  235 00000100         ;//                     <3=> Pclk = Hclk / 8
  236 00000100         ;//     <o6.24..25>    PCLK_ADC: Peripheral Clock Select
                       ion for ADC
  237 00000100         ;//                     <0=> Pclk = Cclk / 4
  238 00000100         ;//                     <1=> Pclk = Cclk
  239 00000100         ;//                     <2=> Pclk = Cclk / 2
  240 00000100         ;//                     <3=> Pclk = Hclk / 8
  241 00000100         ;//     <o6.26..27>   PCLK_CAN1: Peripheral Clock Select
                       ion for CAN1
  242 00000100         ;//                     <0=> Pclk = Cclk / 4
  243 00000100         ;//                     <1=> Pclk = Cclk
  244 00000100         ;//                     <2=> Pclk = Cclk / 2
  245 00000100         ;//                     <3=> Pclk = Hclk / 6
  246 00000100         ;//     <o6.28..29>   PCLK_CAN2: Peripheral Clock Select
                       ion for CAN2
  247 00000100         ;//                     <0=> Pclk = Cclk / 4
  248 00000100         ;//                     <1=> Pclk = Cclk
  249 00000100         ;//                     <2=> Pclk = Cclk / 2
  250 00000100         ;//                     <3=> Pclk = Hclk / 6
  251 00000100         ;//     <o6.30..31>    PCLK_ACF: Peripheral Clock Select
                       ion for ACF
  252 00000100         ;//                     <0=> Pclk = Cclk / 4
  253 00000100         ;//                     <1=> Pclk = Cclk
  254 00000100         ;//                     <2=> Pclk = Cclk / 2
  255 00000100         ;//                     <3=> Pclk = Hclk / 6
  256 00000100         ;//   </h>
  257 00000100         ;//
  258 00000100         ;//   <h> Peripheral Clock Selection Register 1 (PCLKSEL



ARM Macro Assembler    Page 8 


                       1)
  259 00000100         ;//     <o7.0..1>  PCLK_BAT_RAM: Peripheral Clock Select
                       ion for the Battery Supported RAM
  260 00000100         ;//                     <0=> Pclk = Cclk / 4
  261 00000100         ;//                     <1=> Pclk = Cclk
  262 00000100         ;//                     <2=> Pclk = Cclk / 2
  263 00000100         ;//                     <3=> Pclk = Hclk / 8
  264 00000100         ;//     <o7.2..3>     PCLK_GPIO: Peripheral Clock Select
                       ion for GPIOs
  265 00000100         ;//                     <0=> Pclk = Cclk / 4
  266 00000100         ;//                     <1=> Pclk = Cclk
  267 00000100         ;//                     <2=> Pclk = Cclk / 2
  268 00000100         ;//                     <3=> Pclk = Hclk / 8
  269 00000100         ;//     <o7.4..5>      PCLK_PCB: Peripheral Clock Select
                       ion for Pin Connect Block
  270 00000100         ;//                     <0=> Pclk = Cclk / 4
  271 00000100         ;//                     <1=> Pclk = Cclk
  272 00000100         ;//                     <2=> Pclk = Cclk / 2
  273 00000100         ;//                     <3=> Pclk = Hclk / 8
  274 00000100         ;//     <o7.6..7>     PCLK_I2C1: Peripheral Clock Select
                       ion for I2C1
  275 00000100         ;//                     <0=> Pclk = Cclk / 4
  276 00000100         ;//                     <1=> Pclk = Cclk
  277 00000100         ;//                     <2=> Pclk = Cclk / 2
  278 00000100         ;//                     <3=> Pclk = Hclk / 8
  279 00000100         ;//     <o7.10..11>   PCLK_SSP0: Peripheral Clock Select
                       ion for SSP0
  280 00000100         ;//                     <0=> Pclk = Cclk / 4
  281 00000100         ;//                     <1=> Pclk = Cclk
  282 00000100         ;//                     <2=> Pclk = Cclk / 2
  283 00000100         ;//                     <3=> Pclk = Hclk / 8
  284 00000100         ;//     <o7.12..13> PCLK_TIMER2: Peripheral Clock Select
                       ion for TIMER2
  285 00000100         ;//                     <0=> Pclk = Cclk / 4
  286 00000100         ;//                     <1=> Pclk = Cclk
  287 00000100         ;//                     <2=> Pclk = Cclk / 2
  288 00000100         ;//                     <3=> Pclk = Hclk / 8
  289 00000100         ;//     <o7.14..15> PCLK_TIMER3: Peripheral Clock Select
                       ion for TIMER3
  290 00000100         ;//                     <0=> Pclk = Cclk / 4
  291 00000100         ;//                     <1=> Pclk = Cclk
  292 00000100         ;//                     <2=> Pclk = Cclk / 2
  293 00000100         ;//                     <3=> Pclk = Hclk / 8
  294 00000100         ;//     <o7.16..17>  PCLK_UART2: Peripheral Clock Select
                       ion for UART2
  295 00000100         ;//                     <0=> Pclk = Cclk / 4
  296 00000100         ;//                     <1=> Pclk = Cclk
  297 00000100         ;//                     <2=> Pclk = Cclk / 2
  298 00000100         ;//                     <3=> Pclk = Hclk / 8
  299 00000100         ;//     <o7.18..19>  PCLK_UART3: Peripheral Clock Select
                       ion for UART3
  300 00000100         ;//                     <0=> Pclk = Cclk / 4
  301 00000100         ;//                     <1=> Pclk = Cclk
  302 00000100         ;//                     <2=> Pclk = Cclk / 2
  303 00000100         ;//                     <3=> Pclk = Hclk / 8
  304 00000100         ;//     <o7.20..21>   PCLK_I2C2: Peripheral Clock Select
                       ion for I2C2
  305 00000100         ;//                     <0=> Pclk = Cclk / 4
  306 00000100         ;//                     <1=> Pclk = Cclk



ARM Macro Assembler    Page 9 


  307 00000100         ;//                     <2=> Pclk = Cclk / 2
  308 00000100         ;//                     <3=> Pclk = Hclk / 8
  309 00000100         ;//     <o7.22..23>    PCLK_I2S: Peripheral Clock Select
                       ion for I2S
  310 00000100         ;//                     <0=> Pclk = Cclk / 4
  311 00000100         ;//                     <1=> Pclk = Cclk
  312 00000100         ;//                     <2=> Pclk = Cclk / 2
  313 00000100         ;//                     <3=> Pclk = Hclk / 8
  314 00000100         ;//     <o7.24..25>    PCLK_MCI: Peripheral Clock Select
                       ion for MCI
  315 00000100         ;//                     <0=> Pclk = Cclk / 4
  316 00000100         ;//                     <1=> Pclk = Cclk
  317 00000100         ;//                     <2=> Pclk = Cclk / 2
  318 00000100         ;//                     <3=> Pclk = Hclk / 8
  319 00000100         ;//     <o7.28..29> PCLK_SYSCON: Peripheral Clock Select
                       ion for System Control Block
  320 00000100         ;//                     <0=> Pclk = Cclk / 4
  321 00000100         ;//                     <1=> Pclk = Cclk
  322 00000100         ;//                     <2=> Pclk = Cclk / 2
  323 00000100         ;//                     <3=> Pclk = Hclk / 8
  324 00000100         ;//   </h>
  325 00000100         ;//   <h> Power Control for Peripherals Register (PCONP)
                       
  326 00000100         ;//     <o8.31>     PCUSB: USB interface power/clock ena
                       ble
  327 00000100         ;//     <o8.30>     PCENET: Ethernet block power/clock e
                       nable
  328 00000100         ;//     <o8.29>     PCGPDMA: GP DMA function power/clock
                        enable
  329 00000100         ;//     <o8.28>     PCSDC: SD card interface power/clock
                        enable
  330 00000100         ;//     <o8.27>     PCI2S: I2S interface power/clock ena
                       ble
  331 00000100         ;//     <o8.26>     PCI2C2: I2C interface 2 power/clock 
                       enable
  332 00000100         ;//     <o8.25>     PCUART3: UART 3 power/clock enable
  333 00000100         ;//     <o8.24>     PCUART2: UART 2 power/clock enable
  334 00000100         ;//     <o8.23>     PCTIM3: Timer 3 power/clock enable
  335 00000100         ;//     <o8.22>     PCTIM2: Timer 2 power/clock enable
  336 00000100         ;//     <o8.21>     PCSSP0: SSP interface 0 power/clock 
                       enable
  337 00000100         ;//     <o8.19>     PCI2C1: I2C interface 1 power/clock 
                       enable
  338 00000100         ;//     <o8.14>     PCAN2: CAN controller 2 power/clock 
                       enable
  339 00000100         ;//     <o8.13>     PCAN1: CAN controller 1 power/clock 
                       enable
  340 00000100         ;//     <o8.12>     PCAD: A/D converter power/clock enab
                       le
  341 00000100         ;//     <o8.11>     PCEMC: External memory controller po
                       wer/clock enable
  342 00000100         ;//     <o8.10>     PCSSP1: SSP interface 1 power/clock 
                       enable
  343 00000100         ;//     <o8.9>      PCRTC: RTC power/clock enable
  344 00000100         ;//     <o8.8>      PCSPI: SPI interface power/clock ena
                       ble
  345 00000100         ;//     <o8.7>      PCI2C0: I2C interface 0 power/clock 
                       enable
  346 00000100         ;//     <o8.6>      PCPWM1: PWM 1 power/clock enable



ARM Macro Assembler    Page 10 


  347 00000100         ;//     <o8.4>      PCUART1: UART 1 power/clock enable
  348 00000100         ;//     <o8.3>      PCUART0: UART 0 power/clock enable
  349 00000100         ;//     <o8.2>      PCTIM1: Timer/Counter 1 power/clock 
                       enable
  350 00000100         ;//     <o8.1>      PCTIM0: Timer/Counter 0 power/clock 
                       enable
  351 00000100         ;//   </h>
  352 00000100         ;// </e>
  353 00000100 00000001 
                       CLOCK_SETUP
                               EQU              1
  354 00000100 00000020 
                       SCS_Val EQU              0x00000020
  355 00000100 00000001 
                       CLKSRCSEL_Val
                               EQU              0x00000001
  356 00000100 0000000E 
                       PLLCFG_Val
                               EQU              0x0000000E
  357 00000100 00000017 
                       CCLKCFG_Val
                               EQU              0x00000017
  358 00000100 00000005 
                       USBCLKCFG_Val
                               EQU              0x00000005
  359 00000100 00000044 
                       PCLKSEL0_Val
                               EQU              0x00000044
  360 00000100 00000000 
                       PCLKSEL1_Val
                               EQU              0x00000000
  361 00000100 04280FDE 
                       PCONP_Val
                               EQU              0x04280FDE
  362 00000100         
  363 00000100         ;----------------------- Memory Accelerator Module (MAM)
                        Definitions -----------
  364 00000100         
  365 00000100 E01FC000 
                       MAM_BASE
                               EQU              0xE01FC000  ; MAM Base Address
  366 00000100 00000000 
                       MAMCR_OFS
                               EQU              0x00        ; MAM Control Offse
                                                            t
  367 00000100 00000004 
                       MAMTIM_OFS
                               EQU              0x04        ; MAM Timing Offset
                                                            
  368 00000100         
  369 00000100         ;// <e> MAM Setup
  370 00000100         ;//   <o1.0..1>   MAM Control
  371 00000100         ;//               <0=> Disabled
  372 00000100         ;//               <1=> Partially Enabled
  373 00000100         ;//               <2=> Fully Enabled
  374 00000100         ;//               <i> Mode
  375 00000100         ;//   <o2.0..2>   MAM Timing
  376 00000100         ;//               <0=> Reserved  <1=> 1   <2=> 2   <3=> 
                       3



ARM Macro Assembler    Page 11 


  377 00000100         ;//               <4=> 4         <5=> 5   <6=> 6   <7=> 
                       7
  378 00000100         ;//               <i> Fetch Cycles
  379 00000100         ;// </e>
  380 00000100 00000000 
                       MAM_SETUP
                               EQU              0
  381 00000100 00000002 
                       MAMCR_Val
                               EQU              0x00000002
  382 00000100 00000004 
                       MAMTIM_Val
                               EQU              0x00000004
  383 00000100         
  384 00000100         
  385 00000100         ;----------------------- Pin Connect Block Definitions -
                       ------------------------
  386 00000100         
  387 00000100 E002C000 
                       PCB_BASE
                               EQU              0xE002C000  ; PCB Base Address
  388 00000100 00000000 
                       PINSEL0_OFS
                               EQU              0x00        ; PINSEL0  Address 
                                                            Offset
  389 00000100 00000004 
                       PINSEL1_OFS
                               EQU              0x04        ; PINSEL1  Address 
                                                            Offset
  390 00000100 00000008 
                       PINSEL2_OFS
                               EQU              0x08        ; PINSEL2  Address 
                                                            Offset
  391 00000100 0000000C 
                       PINSEL3_OFS
                               EQU              0x0C        ; PINSEL3  Address 
                                                            Offset
  392 00000100 00000010 
                       PINSEL4_OFS
                               EQU              0x10        ; PINSEL4  Address 
                                                            Offset
  393 00000100 00000014 
                       PINSEL5_OFS
                               EQU              0x14        ; PINSEL5  Address 
                                                            Offset
  394 00000100 00000018 
                       PINSEL6_OFS
                               EQU              0x18        ; PINSEL6  Address 
                                                            Offset
  395 00000100 0000001C 
                       PINSEL7_OFS
                               EQU              0x1C        ; PINSEL7  Address 
                                                            Offset
  396 00000100 00000020 
                       PINSEL8_OFS
                               EQU              0x20        ; PINSEL8  Address 
                                                            Offset
  397 00000100 00000024 
                       PINSEL9_OFS



ARM Macro Assembler    Page 12 


                               EQU              0x24        ; PINSEL9  Address 
                                                            Offset
  398 00000100 00000028 
                       PINSEL10_OFS
                               EQU              0x28        ; PINSEL10 Address 
                                                            Offset
  399 00000100         
  400 00000100         
  401 00000100         ;----------------------- External Memory Controller (EMC
                       ) Definitons -----------
  402 00000100         
  403 00000100 FFE08000 
                       EMC_BASE
                               EQU              0xFFE08000  ; EMC Base Address
  404 00000100         
  405 00000100 00000000 
                       EMC_CTRL_OFS
                               EQU              0x000       ; EMCControl
  406 00000100 00000004 
                       EMC_STAT_OFS
                               EQU              0x004       ; EMCStatus
  407 00000100 00000008 
                       EMC_CONFIG_OFS
                               EQU              0x008       ; EMCConfig
  408 00000100 00000200 
                       EMC_STA_CFG0_OFS
                               EQU              0x200       ; EMCStaticConfig0
  409 00000100 00000204 
                       EMC_STA_WWEN0_OFS
                               EQU              0x204       ; EMCStaticWaitWen0
                                                            
  410 00000100 00000208 
                       EMC_STA_WOEN0_OFS
                               EQU              0x208       ; EMCStaticWaitOen0
                                                            
  411 00000100 0000020C 
                       EMC_STA_WRD0_OFS
                               EQU              0x20C       ; EMCStaticWaitRd0
  412 00000100 00000210 
                       EMC_STA_WPAGE0_OFS
                               EQU              0x210       ; EMCStaticWaitPage
                                                            0
  413 00000100 00000214 
                       EMC_STA_WWR0_OFS
                               EQU              0x214       ; EMCStaticWaitWr0
  414 00000100 00000218 
                       EMC_STA_WTURN0_OFS
                               EQU              0x218       ; EMCStaticWaitTurn
                                                            0
  415 00000100 00000220 
                       EMC_STA_CFG1_OFS
                               EQU              0x220       ; EMCStaticConfig1
  416 00000100 00000224 
                       EMC_STA_WWEN1_OFS
                               EQU              0x224       ; EMCStaticWaitWen1
                                                            
  417 00000100 00000228 
                       EMC_STA_WOEN1_OFS
                               EQU              0x228       ; EMCStaticWaitOen1



ARM Macro Assembler    Page 13 


                                                            
  418 00000100 0000022C 
                       EMC_STA_WRD1_OFS
                               EQU              0x22C       ; EMCStaticWaitRd1
  419 00000100 00000230 
                       EMC_STA_WPAGE1_OFS
                               EQU              0x230       ; EMCStaticWaitPage
                                                            1
  420 00000100 00000234 
                       EMC_STA_WWR1_OFS
                               EQU              0x234       ; EMCStaticWaitWr1
  421 00000100 00000238 
                       EMC_STA_WTURN1_OFS
                               EQU              0x238       ; EMCStaticWaitTurn
                                                            1
  422 00000100 00000080 
                       EMC_STA_EXT_W_OFS
                               EQU              0x080       ; EMCStaticExtended
                                                            Wait
  423 00000100         
  424 00000100 00080000 
                       BUFEN_Const
                               EQU              (1 << 19)   ; Buffer enable bit
                                                            
  425 00000100 00000800 
                       EMC_PCONP_Const
                               EQU              (1 << 11)   ; PCONP val to enab
                                                            le power for EMC
  426 00000100         
  427 00000100         ; External Memory Pins definitions
  428 00000100         ; pin functions for external memory interfacing
  429 00000100 00005555 
                       EMC_PINSEL6_Val
                               EQU              0x00005555  ; D0 .. D7
  430 00000100 55555555 
                       EMC_PINSEL8_Val
                               EQU              0x55555555  ; A0 .. A15
  431 00000100 50090000 
                       EMC_PINSEL9_Val
                               EQU              0x50090000  ;     ; !OE, !WE (B
                                                            LS0 because of erra
                                                            ta), !CS0, !CS1
  432 00000100         
  433 00000100         ;//     External Memory Controller Setup (EMC) ---------
                       ------------------------
  434 00000100         ;// <e> External Memory Controller Setup (EMC)
  435 00000100 00000000 
                       EMC_SETUP
                               EQU              0
  436 00000100         
  437 00000100         ;//   <h> EMC Control Register (EMCControl)
  438 00000100         ;//     <i> Controls operation of the memory controller
  439 00000100         ;//     <o0.2> L: Low-power mode enable
  440 00000100         ;//     <o0.1> M: Address mirror enable
  441 00000100         ;//     <o0.0> E: EMC enable
  442 00000100         ;//   </h>
  443 00000100 00000001 
                       EMC_CTRL_Val
                               EQU              0x00000001



ARM Macro Assembler    Page 14 


  444 00000100         
  445 00000100         ;//   <h> EMC Configuration Register (EMCConfig)
  446 00000100         ;//     <o0.0> Endian mode
  447 00000100         ;//       <0=> Little-endian
  448 00000100         ;//       <1=> Big-endian
  449 00000100         ;//   </h>
  450 00000100 00000000 
                       EMC_CONFIG_Val
                               EQU              0x00000000
  451 00000100         
  452 00000100         ;//       Configure External Bus Behaviour for Static CS
                       0 Area -----------------
  453 00000100         ;//   <e> Configure External Bus Behaviour for Static CS
                       0 Area
  454 00000100 00000001 
                       EMC_STACS0_SETUP
                               EQU              1
  455 00000100         
  456 00000100         ;//     <h> Static Memory Configuration Register (EMCSta
                       ticConfig0)
  457 00000100         ;//       <i> Defines the configuration information for 
                       the static memory CS0
  458 00000100         ;//       <o0.20> WP: Write protect
  459 00000100         ;//       <o0.19> B: Write buffer enable
  460 00000100         ;//       <o0.8> EW: Extended wait enable
  461 00000100         ;//       <o0.6> PC: Chip select polarity
  462 00000100         ;//         <0=> Active LOW chip select
  463 00000100         ;//         <1=> Active HIGH chip select
  464 00000100         ;//       <o0.3> PM: Async page mode enable
  465 00000100         ;//       <o0.0..1> MW: Memory width
  466 00000100         ;//         <0=> 8 bit
  467 00000100         ;//         <1=> 16 bit
  468 00000100         ;//         <2=> 32 bit
  469 00000100         ;//     </h>
  470 00000100 00000000 
                       EMC_STA_CFG0_Val
                               EQU              0x00000000
  471 00000100         
  472 00000100         ;//     <h> Static Memory Write Enable Delay Register (E
                       MCStaticWaitWen0)
  473 00000100         ;//       <i> Selects the delay from CS0 to write enable
                       
  474 00000100         ;//       <o.0..3> WAITWEN: Wait write enable <1-16> <#-
                       1>
  475 00000100         ;//         <i> The delay is in CCLK cycles
  476 00000100         ;//     </h>
  477 00000100 00000002 
                       EMC_STA_WWEN0_Val
                               EQU              0x00000002
  478 00000100         
  479 00000100         ;//     <h> Static Memory Output Enable Delay register (
                       EMCStaticWaitOen0)
  480 00000100         ;//       <i> Selects the delay from CS0 or address chan
                       ge, whichever is later, to output enable
  481 00000100         ;//       <o.0..3> WAITOEN: Wait output enable <0-15>
  482 00000100         ;//         <i> The delay is in CCLK cycles
  483 00000100         ;//     </h>
  484 00000100 00000002 
                       EMC_STA_WOEN0_Val



ARM Macro Assembler    Page 15 


                               EQU              0x00000002
  485 00000100         
  486 00000100         ;//     <h> Static Memory Read Delay Register (EMCStatic
                       WaitRd0)
  487 00000100         ;//       <i> Selects the delay from CS0 to a read acces
                       s
  488 00000100         ;//       <o.0..4> WAITRD: Non-page mode read wait state
                       s or asynchronous page mode read first access wait state
                       s <1-32> <#-1>
  489 00000100         ;//         <i> The delay is in CCLK cycles
  490 00000100         ;//     </h>
  491 00000100 0000001F 
                       EMC_STA_WRD0_Val
                               EQU              0x0000001F
  492 00000100         
  493 00000100         ;//     <h> Static Memory Page Mode Read Delay Register 
                       (EMCStaticWaitPage0)
  494 00000100         ;//       <i> Selects the delay for asynchronous page mo
                       de sequential accesses for CS0
  495 00000100         ;//       <o.0..4> WAITPAGE: Asynchronous page mode read
                        after the first read wait states <1-32> <#-1>
  496 00000100         ;//         <i> The delay is in CCLK cycles
  497 00000100         ;//     </h>
  498 00000100 0000001F 
                       EMC_STA_WPAGE0_Val
                               EQU              0x0000001F
  499 00000100         
  500 00000100         ;//     <h> Static Memory Write Delay Register (EMCStati
                       cWaitWr0)
  501 00000100         ;//       <i> Selects the delay from CS0 to a write acce
                       ss
  502 00000100         ;//       <o.0..4> WAITWR: Write wait states <2-33> <#-2
                       >
  503 00000100         ;//         <i> The delay is in CCLK cycles
  504 00000100         ;//     </h>
  505 00000100 0000001F 
                       EMC_STA_WWR0_Val
                               EQU              0x0000001F
  506 00000100         
  507 00000100         ;//     <h> Static Memory Turn Round Delay Register (EMC
                       StaticWaitTurn0)
  508 00000100         ;//       <i> Selects the number of bus turnaround cycle
                       s for CS0
  509 00000100         ;//       <o.0..4> WAITTURN: Bus turnaround cycles <1-16
                       > <#-1>
  510 00000100         ;//         <i> The delay is in CCLK cycles
  511 00000100         ;//     </h>
  512 00000100 0000000F 
                       EMC_STA_WTURN0_Val
                               EQU              0x0000000F
  513 00000100         
  514 00000100         ;//   </e> End of Static Setup for Static CS0 Area
  515 00000100         
  516 00000100         ;//       Configure External Bus Behaviour for Static CS
                       1 Area -----------------
  517 00000100         ;//   <e> Configure External Bus Behaviour for Static CS
                       1 Area
  518 00000100 00000000 
                       EMC_STACS1_SETUP



ARM Macro Assembler    Page 16 


                               EQU              0
  519 00000100         
  520 00000100         ;//     <h> Static Memory Configuration Register (EMCSta
                       ticConfig1)
  521 00000100         ;//       <i> Defines the configuration information for 
                       the static memory CS1
  522 00000100         ;//       <o0.20> WP: Write protect
  523 00000100         ;//       <o0.19> B: Write buffer enable
  524 00000100         ;//       <o0.8> EW: Extended wait enable
  525 00000100         ;//       <o0.6> PC: Chip select polarity
  526 00000100         ;//         <0=> Active LOW chip select
  527 00000100         ;//         <1=> Active HIGH chip select
  528 00000100         ;//       <o0.3> PM: Async page mode enable
  529 00000100         ;//       <o0.0..1> MW: Memory width
  530 00000100         ;//         <0=> 8 bit
  531 00000100         ;//         <1=> 16 bit
  532 00000100         ;//         <2=> 32 bit
  533 00000100         ;//     </h>
  534 00000100 00000000 
                       EMC_STA_CFG1_Val
                               EQU              0x00000000
  535 00000100         
  536 00000100         ;//     <h> Static Memory Write Enable Delay Register (E
                       MCStaticWaitWen1)
  537 00000100         ;//       <i> Selects the delay from CS1 to write enable
                       
  538 00000100         ;//       <o.0..3> WAITWEN: Wait write enable <1-16> <#-
                       1>
  539 00000100         ;//         <i> The delay is in CCLK cycles
  540 00000100         ;//     </h>
  541 00000100 00000000 
                       EMC_STA_WWEN1_Val
                               EQU              0x00000000
  542 00000100         
  543 00000100         ;//     <h> Static Memory Output Enable Delay register (
                       EMCStaticWaitOen1)
  544 00000100         ;//       <i> Selects the delay from CS1 or address chan
                       ge, whichever is later, to output enable
  545 00000100         ;//       <o.0..3> WAITOEN: Wait output enable <0-15>
  546 00000100         ;//         <i> The delay is in CCLK cycles
  547 00000100         ;//     </h>
  548 00000100 00000000 
                       EMC_STA_WOEN1_Val
                               EQU              0x00000000
  549 00000100         
  550 00000100         ;//     <h> Static Memory Read Delay Register (EMCStatic
                       WaitRd1)
  551 00000100         ;//       <i> Selects the delay from CS1 to a read acces
                       s
  552 00000100         ;//       <o.0..4> WAITRD: Non-page mode read wait state
                       s or asynchronous page mode read first access wait state
                       s <1-32> <#-1>
  553 00000100         ;//         <i> The delay is in CCLK cycles
  554 00000100         ;//     </h>
  555 00000100 0000001F 
                       EMC_STA_WRD1_Val
                               EQU              0x0000001F
  556 00000100         
  557 00000100         ;//     <h> Static Memory Page Mode Read Delay Register 



ARM Macro Assembler    Page 17 


                       (EMCStaticWaitPage0)
  558 00000100         ;//       <i> Selects the delay for asynchronous page mo
                       de sequential accesses for CS1
  559 00000100         ;//       <o.0..4> WAITPAGE: Asynchronous page mode read
                        after the first read wait states <1-32> <#-1>
  560 00000100         ;//         <i> The delay is in CCLK cycles
  561 00000100         ;//     </h>
  562 00000100 0000001F 
                       EMC_STA_WPAGE1_Val
                               EQU              0x0000001F
  563 00000100         
  564 00000100         ;//     <h> Static Memory Write Delay Register (EMCStati
                       cWaitWr1)
  565 00000100         ;//       <i> Selects the delay from CS1 to a write acce
                       ss
  566 00000100         ;//       <o.0..4> WAITWR: Write wait states <2-33> <#-2
                       >
  567 00000100         ;//         <i> The delay is in CCLK cycles
  568 00000100         ;//     </h>
  569 00000100 0000001F 
                       EMC_STA_WWR1_Val
                               EQU              0x0000001F
  570 00000100         
  571 00000100         ;//     <h> Static Memory Turn Round Delay Register (EMC
                       StaticWaitTurn1)
  572 00000100         ;//       <i> Selects the number of bus turnaround cycle
                       s for CS1
  573 00000100         ;//       <o.0..4> WAITTURN: Bus turnaround cycles <1-16
                       > <#-1>
  574 00000100         ;//         <i> The delay is in CCLK cycles
  575 00000100         ;//     </h>
  576 00000100 0000000F 
                       EMC_STA_WTURN1_Val
                               EQU              0x0000000F
  577 00000100         
  578 00000100         ;//   </e> End of Static Setup for Static CS1 Area
  579 00000100         
  580 00000100         ;//   <h> Static Memory Extended Wait Register (EMCStati
                       cExtendedWait)
  581 00000100         ;//     <i> Time long static memory read and write trans
                       fers
  582 00000100         ;//     <o.0..9> EXTENDEDWAIT: Extended wait time out <1
                       -64><#-1>
  583 00000100         ;//       <i> The delay is in (16 * CCLK) cycles
  584 00000100         ;//   </h>
  585 00000100 00000000 
                       EMC_STA_EXT_W_Val
                               EQU              0x00000000
  586 00000100         
  587 00000100         ;// </e> End of EMC Setup
  588 00000100         
  589 00000100         
  590 00000100                 PRESERVE8
  591 00000100         
  592 00000100         ; Area Definition and Entry Point
  593 00000100         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  594 00000100         
  595 00000100                 AREA             RESET, CODE, READONLY



ARM Macro Assembler    Page 18 


  596 00000000                 ARM
  597 00000000         
  598 00000000         
  599 00000000         ; Exception Vectors
  600 00000000         ;  Mapped to Address 0.
  601 00000000         ;  Absolute addressing mode must be used.
  602 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  603 00000000         
  604 00000000 E59FF01C 
                       Vectors LDR              PC, Reset_Addr
  605 00000004 E59FF01C        LDR              PC, Undef_Addr
  606 00000008 E59FF01C        LDR              PC, SWI_Addr
  607 0000000C E59FF01C        LDR              PC, PAbt_Addr
  608 00000010 E59FF01C        LDR              PC, DAbt_Addr
  609 00000014 E1A00000        NOP                          ; Reserved Vector 
  610 00000018         ;               LDR     PC, IRQ_Addr
  611 00000018 E51FF120        LDR              PC, [PC, #-0x0120] ; Vector fro
                                                            m VicVectAddr
  612 0000001C E51FF004        LDR              PC, FIQ_Addr
  613 00000020         
  614 00000020         
  615 00000020                 PRESERVE8                    ; tell linker: stac
                                                            k alignment is 8-by
                                                            te
  616 00000020                 IMPORT           UART0_Int   ; use external FIQ_
                                                            Handler
  617 00000020 00000000 
                       FIQ_Addr
                               DCD              UART0_Int   ; FIQ Entry point
  618 00000024         
  619 00000024         
  620 00000024 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  621 00000028 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  622 0000002C 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  623 00000030 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  624 00000034 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  625 00000038 00000000        DCD              0           ; Reserved Address 
                                                            
  626 0000003C 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  627 00000040         ; FIQ_Addr        DCD     FIQ_Handler
  628 00000040         
  629 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  630 00000044 EAFFFFFE 
                       SWI_Handler



ARM Macro Assembler    Page 19 


                               B                SWI_Handler
  631 00000048 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  632 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  633 00000050 EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  634 00000054         ; FIQ_Handler     B       FIQ_Handler
  635 00000054         
  636 00000054         
  637 00000054         ; Reset Handler
  638 00000054         
  639 00000054                 EXPORT           Reset_Handler
  640 00000054         Reset_Handler
  641 00000054         
  642 00000054         
  643 00000054         
  644 00000054         ; Clock Setup ------------------------------------------
                       ------------------------
  645 00000054         
  646 00000054                 IF               (:LNOT:(:DEF:NO_CLOCK_SETUP)):L
AND:(CLOCK_SETUP != 0)
  647 00000054 E59F00F0        LDR              R0, =SCB_BASE
  648 00000058 E3A010AA        MOV              R1, #0xAA
  649 0000005C E3A02055        MOV              R2, #0x55
  650 00000060         
  651 00000060         ;  Configure and Enable PLL
  652 00000060 E3A03020        LDR              R3, =SCS_Val ; Enable main osci
                                                            llator
  653 00000064 E58031A0        STR              R3, [R0, #SCS_OFS]
  654 00000068         
  655 00000068                 IF               (SCS_Val:AND:OSCEN) != 0
  656 00000068 E59031A0 
                       OSC_Loop
                               LDR              R3, [R0, #SCS_OFS] ; Wait for m
                                                            ain osc stabilize
  657 0000006C E2133040        ANDS             R3, R3, #OSCSTAT
  658 00000070 0AFFFFFC        BEQ              OSC_Loop
  659 00000074                 ENDIF
  660 00000074         
  661 00000074 E3A03001        LDR              R3, =CLKSRCSEL_Val ; Select PLL
                                                             source clock
  662 00000078 E580310C        STR              R3, [R0, #CLKSRCSEL_OFS]
  663 0000007C E3A0300E        LDR              R3, =PLLCFG_Val
  664 00000080 E5803084        STR              R3, [R0, #PLLCFG_OFS]
  665 00000084 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  666 00000088 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  667 0000008C E3A03001        MOV              R3, #PLLCON_PLLE
  668 00000090 E5803080        STR              R3, [R0, #PLLCON_OFS]
  669 00000094 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  670 00000098 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  671 0000009C         
  672 0000009C                 IF               (CLKSRCSEL_Val:AND:3) != 2
  673 0000009C         ;  Wait until PLL Locked (if source is not RTC oscillato
                       r)
  674 0000009C E5903088 



ARM Macro Assembler    Page 20 


                       PLL_Loop
                               LDR              R3, [R0, #PLLSTAT_OFS]
  675 000000A0 E2133301        ANDS             R3, R3, #PLLSTAT_PLOCK
  676 000000A4 0AFFFFFC        BEQ              PLL_Loop
  677 000000A8                 ELSE
  682                          ENDIF
  683 000000A8         
  684 000000A8 E5903088 
                       M_N_Lock
                               LDR              R3, [R0, #PLLSTAT_OFS]
  685 000000AC E59F409C        LDR              R4, =(PLLSTAT_M:OR:PLLSTAT_N)
  686 000000B0 E0033004        AND              R3, R3, R4
  687 000000B4 E3A0400E        LDR              R4, =PLLCFG_Val
  688 000000B8 E0333004        EORS             R3, R3, R4
  689 000000BC 1AFFFFF9        BNE              M_N_Lock
  690 000000C0         
  691 000000C0         ;  Setup CPU clock divider
  692 000000C0 E3A03017        MOV              R3, #CCLKCFG_Val
  693 000000C4 E5803104        STR              R3, [R0, #CCLKCFG_OFS]
  694 000000C8         
  695 000000C8         ;  Setup USB clock divider
  696 000000C8 E3A03005        LDR              R3, =USBCLKCFG_Val
  697 000000CC E5803108        STR              R3, [R0, #USBCLKCFG_OFS]
  698 000000D0         
  699 000000D0         ;  Setup Peripheral Clock
  700 000000D0 E3A03044        LDR              R3, =PCLKSEL0_Val
  701 000000D4 E58031A8        STR              R3, [R0, #PCLKSEL0_OFS]
  702 000000D8 E3A03000        LDR              R3, =PCLKSEL1_Val
  703 000000DC E58031AC        STR              R3, [R0, #PCLKSEL1_OFS]
  704 000000E0         
  705 000000E0         ;  Switch to PLL Clock
  706 000000E0 E3A03003        MOV              R3, #(PLLCON_PLLE:OR:PLLCON_PLL
C)
  707 000000E4 E5803080        STR              R3, [R0, #PLLCON_OFS]
  708 000000E8 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  709 000000EC E580208C        STR              R2, [R0, #PLLFEED_OFS]
  710 000000F0         
  711 000000F0 E59F405C        LDR              R4, =PCONP_Val ; Enable Periphe
                                                            ral Clocks
  712 000000F4 E58040C4        STR              R4, [R0, #PCONP_OFS]
  713 000000F8                 ENDIF                        ; CLOCK_SETUP
  714 000000F8         
  715 000000F8         
  716 000000F8         ; Setup Memory Accelerator Module ----------------------
                       ------------------------
  717 000000F8         
  718 000000F8                 IF               MAM_SETUP != 0
  724                          ENDIF                        ; MAM_SETUP
  725 000000F8         
  726 000000F8         
  727 000000F8         ; Setup External Memory Controller ---------------------
                       ------------------------
  728 000000F8         
  729 000000F8                 IF               (:DEF:NO_EMC_SETUP):LOR:(EMC_SE
TUP != 0)
  798                          ENDIF                        ; EMC_SETUP
  799 000000F8         
  800 000000F8         
  801 000000F8         ; Copy Exception Vectors to Internal RAM ---------------



ARM Macro Assembler    Page 21 


                       ------------------------
  802 000000F8         
  803 000000F8                 IF               :DEF:RAM_INTVEC
  810                          ENDIF
  811 000000F8         
  812 000000F8         
  813 000000F8         ; Memory Mapping (when Interrupt Vectors are in RAM) ---
                       ------------------------
  814 000000F8         
  815 000000F8 E01FC040 
                       MEMMAP  EQU              0xE01FC040  ; Memory Mapping Co
                                                            ntrol
  816 000000F8                 IF               :DEF:REMAP
  826                          ENDIF
  827 000000F8         
  828 000000F8         
  829 000000F8         ; Setup Stack for each mode ----------------------------
                       ------------------------
  830 000000F8         
  831 000000F8 E59F0058        LDR              R0, =Stack_Top
  832 000000FC         
  833 000000FC         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  834 000000FC E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  835 00000100 E1A0D000        MOV              SP, R0
  836 00000104 E2400000        SUB              R0, R0, #UND_Stack_Size
  837 00000108         
  838 00000108         ;  Enter Abort Mode and set its Stack Pointer
  839 00000108 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  840 0000010C E1A0D000        MOV              SP, R0
  841 00000110 E2400000        SUB              R0, R0, #ABT_Stack_Size
  842 00000114         
  843 00000114         ;  Enter FIQ Mode and set its Stack Pointer
  844 00000114 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  845 00000118 E1A0D000        MOV              SP, R0
  846 0000011C E2400000        SUB              R0, R0, #FIQ_Stack_Size
  847 00000120         
  848 00000120         ;  Enter IRQ Mode and set its Stack Pointer
  849 00000120 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  850 00000124 E1A0D000        MOV              SP, R0
  851 00000128 E2400C01        SUB              R0, R0, #IRQ_Stack_Size
  852 0000012C         
  853 0000012C         ;  Enter Supervisor Mode and set its Stack Pointer
  854 0000012C E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  855 00000130 E1A0D000        MOV              SP, R0
  856 00000134 E2400008        SUB              R0, R0, #SVC_Stack_Size
  857 00000138         
  858 00000138         ;  Enter User Mode and set its Stack Pointer
  859 00000138 E321F010        MSR              CPSR_c, #Mode_USR
  860 0000013C                 IF               :DEF:__MICROLIB
  865 0000013C         
  866 0000013C E1A0D000        MOV              SP, R0
  867 00000140 E24DAB01        SUB              SL, SP, #USR_Stack_Size
  868 00000144         



ARM Macro Assembler    Page 22 


  869 00000144                 ENDIF
  870 00000144         
  871 00000144         
  872 00000144         ; Enter the C code -------------------------------------
                       ------------------------
  873 00000144         
  874 00000144                 IMPORT           __main
  875 00000144 E59F0010        LDR              R0, =__main
  876 00000148 E12FFF10        BX               R0
  877 0000014C         
  878 0000014C         
  879 0000014C                 IF               :DEF:__MICROLIB
  885 0000014C         ; User Initial Stack & Heap
  886 0000014C E01FC000 
              00FF7FFF 
              04280FDE 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  887 00000000         
  888 00000000                 IMPORT           __use_two_region_memory
  889 00000000                 EXPORT           __user_initial_stackheap
  890 00000000         __user_initial_stackheap
  891 00000000         
  892 00000000 E59F000C        LDR              R0, =  Heap_Mem
  893 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  894 00000008 E59F200C        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  895 0000000C E59F300C        LDR              R3, = Stack_Mem
  896 00000010 E12FFF1E        BX               LR
  897 00000014                 ENDIF
  898 00000014         
  899 00000014         
  900 00000014                 END
              00000000 
              00000400 
              00000100 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\lpc2300.d -o.\lpc2300.
o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips 
--predefine="__EVAL SETA 1" --list=.\lpc2300.lst LPC2300.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 92 in file LPC2300.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 94 in file LPC2300.s
   Uses
      At line 893 in file LPC2300.s
      At line 895 in file LPC2300.s

Stack_Top 00000508

Symbol: Stack_Top
   Definitions
      At line 97 in file LPC2300.s
   Uses
      At line 831 in file LPC2300.s
Comment: Stack_Top used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 95 in file LPC2300.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 106 in file LPC2300.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 108 in file LPC2300.s
   Uses
      At line 892 in file LPC2300.s
      At line 894 in file LPC2300.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 107 in file LPC2300.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000100

Symbol: __heap_limit
   Definitions
      At line 109 in file LPC2300.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000034

Symbol: DAbt_Addr
   Definitions
      At line 624 in file LPC2300.s
   Uses
      At line 608 in file LPC2300.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 632 in file LPC2300.s
   Uses
      At line 624 in file LPC2300.s
      At line 632 in file LPC2300.s

FIQ_Addr 00000020

Symbol: FIQ_Addr
   Definitions
      At line 617 in file LPC2300.s
   Uses
      At line 612 in file LPC2300.s
Comment: FIQ_Addr used once
IRQ_Addr 0000003C

Symbol: IRQ_Addr
   Definitions
      At line 626 in file LPC2300.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 00000050

Symbol: IRQ_Handler
   Definitions
      At line 633 in file LPC2300.s
   Uses
      At line 626 in file LPC2300.s
      At line 633 in file LPC2300.s

M_N_Lock 000000A8

Symbol: M_N_Lock
   Definitions
      At line 684 in file LPC2300.s
   Uses
      At line 689 in file LPC2300.s
Comment: M_N_Lock used once
OSC_Loop 00000068

Symbol: OSC_Loop
   Definitions
      At line 656 in file LPC2300.s
   Uses
      At line 658 in file LPC2300.s
Comment: OSC_Loop used once
PAbt_Addr 00000030



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: PAbt_Addr
   Definitions
      At line 623 in file LPC2300.s
   Uses
      At line 607 in file LPC2300.s
Comment: PAbt_Addr used once
PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 631 in file LPC2300.s
   Uses
      At line 623 in file LPC2300.s
      At line 631 in file LPC2300.s

PLL_Loop 0000009C

Symbol: PLL_Loop
   Definitions
      At line 674 in file LPC2300.s
   Uses
      At line 676 in file LPC2300.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 595 in file LPC2300.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000024

Symbol: Reset_Addr
   Definitions
      At line 620 in file LPC2300.s
   Uses
      At line 604 in file LPC2300.s
Comment: Reset_Addr used once
Reset_Handler 00000054

Symbol: Reset_Handler
   Definitions
      At line 640 in file LPC2300.s
   Uses
      At line 620 in file LPC2300.s
      At line 639 in file LPC2300.s

SWI_Addr 0000002C

Symbol: SWI_Addr
   Definitions
      At line 622 in file LPC2300.s
   Uses
      At line 606 in file LPC2300.s
Comment: SWI_Addr used once
SWI_Handler 00000044




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: SWI_Handler
   Definitions
      At line 630 in file LPC2300.s
   Uses
      At line 622 in file LPC2300.s
      At line 630 in file LPC2300.s

Undef_Addr 00000028

Symbol: Undef_Addr
   Definitions
      At line 621 in file LPC2300.s
   Uses
      At line 605 in file LPC2300.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 629 in file LPC2300.s
   Uses
      At line 621 in file LPC2300.s
      At line 629 in file LPC2300.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 604 in file LPC2300.s
   Uses
      None
Comment: Vectors unused
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 886 in file LPC2300.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 890 in file LPC2300.s
   Uses
      At line 889 in file LPC2300.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 84 in file LPC2300.s
   Uses
      At line 90 in file LPC2300.s
      At line 841 in file LPC2300.s

BUFEN_Const 00080000

Symbol: BUFEN_Const
   Definitions
      At line 424 in file LPC2300.s
   Uses
      None
Comment: BUFEN_Const unused
CCLKCFG_OFS 00000104

Symbol: CCLKCFG_OFS
   Definitions
      At line 119 in file LPC2300.s
   Uses
      At line 693 in file LPC2300.s
Comment: CCLKCFG_OFS used once
CCLKCFG_Val 00000017

Symbol: CCLKCFG_Val
   Definitions
      At line 357 in file LPC2300.s
   Uses
      At line 692 in file LPC2300.s
Comment: CCLKCFG_Val used once
CLKSRCSEL_OFS 0000010C

Symbol: CLKSRCSEL_OFS
   Definitions
      At line 121 in file LPC2300.s
   Uses
      At line 662 in file LPC2300.s
Comment: CLKSRCSEL_OFS used once
CLKSRCSEL_Val 00000001

Symbol: CLKSRCSEL_Val
   Definitions
      At line 355 in file LPC2300.s
   Uses
      At line 661 in file LPC2300.s
      At line 672 in file LPC2300.s

CLOCK_SETUP 00000001

Symbol: CLOCK_SETUP
   Definitions
      At line 353 in file LPC2300.s
   Uses
      At line 646 in file LPC2300.s
Comment: CLOCK_SETUP used once
EMC_BASE FFE08000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: EMC_BASE
   Definitions
      At line 403 in file LPC2300.s
   Uses
      None
Comment: EMC_BASE unused
EMC_CONFIG_OFS 00000008

Symbol: EMC_CONFIG_OFS
   Definitions
      At line 407 in file LPC2300.s
   Uses
      None
Comment: EMC_CONFIG_OFS unused
EMC_CONFIG_Val 00000000

Symbol: EMC_CONFIG_Val
   Definitions
      At line 450 in file LPC2300.s
   Uses
      None
Comment: EMC_CONFIG_Val unused
EMC_CTRL_OFS 00000000

Symbol: EMC_CTRL_OFS
   Definitions
      At line 405 in file LPC2300.s
   Uses
      None
Comment: EMC_CTRL_OFS unused
EMC_CTRL_Val 00000001

Symbol: EMC_CTRL_Val
   Definitions
      At line 443 in file LPC2300.s
   Uses
      None
Comment: EMC_CTRL_Val unused
EMC_PCONP_Const 00000800

Symbol: EMC_PCONP_Const
   Definitions
      At line 425 in file LPC2300.s
   Uses
      None
Comment: EMC_PCONP_Const unused
EMC_PINSEL6_Val 00005555

Symbol: EMC_PINSEL6_Val
   Definitions
      At line 429 in file LPC2300.s
   Uses
      None
Comment: EMC_PINSEL6_Val unused
EMC_PINSEL8_Val 55555555

Symbol: EMC_PINSEL8_Val
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 430 in file LPC2300.s
   Uses
      None
Comment: EMC_PINSEL8_Val unused
EMC_PINSEL9_Val 50090000

Symbol: EMC_PINSEL9_Val
   Definitions
      At line 431 in file LPC2300.s
   Uses
      None
Comment: EMC_PINSEL9_Val unused
EMC_SETUP 00000000

Symbol: EMC_SETUP
   Definitions
      At line 435 in file LPC2300.s
   Uses
      At line 729 in file LPC2300.s
Comment: EMC_SETUP used once
EMC_STACS0_SETUP 00000001

Symbol: EMC_STACS0_SETUP
   Definitions
      At line 454 in file LPC2300.s
   Uses
      None
Comment: EMC_STACS0_SETUP unused
EMC_STACS1_SETUP 00000000

Symbol: EMC_STACS1_SETUP
   Definitions
      At line 518 in file LPC2300.s
   Uses
      None
Comment: EMC_STACS1_SETUP unused
EMC_STAT_OFS 00000004

Symbol: EMC_STAT_OFS
   Definitions
      At line 406 in file LPC2300.s
   Uses
      None
Comment: EMC_STAT_OFS unused
EMC_STA_CFG0_OFS 00000200

Symbol: EMC_STA_CFG0_OFS
   Definitions
      At line 408 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_CFG0_OFS unused
EMC_STA_CFG0_Val 00000000

Symbol: EMC_STA_CFG0_Val
   Definitions
      At line 470 in file LPC2300.s
   Uses
      None



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: EMC_STA_CFG0_Val unused
EMC_STA_CFG1_OFS 00000220

Symbol: EMC_STA_CFG1_OFS
   Definitions
      At line 415 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_CFG1_OFS unused
EMC_STA_CFG1_Val 00000000

Symbol: EMC_STA_CFG1_Val
   Definitions
      At line 534 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_CFG1_Val unused
EMC_STA_EXT_W_OFS 00000080

Symbol: EMC_STA_EXT_W_OFS
   Definitions
      At line 422 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_EXT_W_OFS unused
EMC_STA_EXT_W_Val 00000000

Symbol: EMC_STA_EXT_W_Val
   Definitions
      At line 585 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_EXT_W_Val unused
EMC_STA_WOEN0_OFS 00000208

Symbol: EMC_STA_WOEN0_OFS
   Definitions
      At line 410 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WOEN0_OFS unused
EMC_STA_WOEN0_Val 00000002

Symbol: EMC_STA_WOEN0_Val
   Definitions
      At line 484 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WOEN0_Val unused
EMC_STA_WOEN1_OFS 00000228

Symbol: EMC_STA_WOEN1_OFS
   Definitions
      At line 417 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WOEN1_OFS unused
EMC_STA_WOEN1_Val 00000000




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Symbol: EMC_STA_WOEN1_Val
   Definitions
      At line 548 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WOEN1_Val unused
EMC_STA_WPAGE0_OFS 00000210

Symbol: EMC_STA_WPAGE0_OFS
   Definitions
      At line 412 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WPAGE0_OFS unused
EMC_STA_WPAGE0_Val 0000001F

Symbol: EMC_STA_WPAGE0_Val
   Definitions
      At line 498 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WPAGE0_Val unused
EMC_STA_WPAGE1_OFS 00000230

Symbol: EMC_STA_WPAGE1_OFS
   Definitions
      At line 419 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WPAGE1_OFS unused
EMC_STA_WPAGE1_Val 0000001F

Symbol: EMC_STA_WPAGE1_Val
   Definitions
      At line 562 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WPAGE1_Val unused
EMC_STA_WRD0_OFS 0000020C

Symbol: EMC_STA_WRD0_OFS
   Definitions
      At line 411 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WRD0_OFS unused
EMC_STA_WRD0_Val 0000001F

Symbol: EMC_STA_WRD0_Val
   Definitions
      At line 491 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WRD0_Val unused
EMC_STA_WRD1_OFS 0000022C

Symbol: EMC_STA_WRD1_OFS
   Definitions
      At line 418 in file LPC2300.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: EMC_STA_WRD1_OFS unused
EMC_STA_WRD1_Val 0000001F

Symbol: EMC_STA_WRD1_Val
   Definitions
      At line 555 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WRD1_Val unused
EMC_STA_WTURN0_OFS 00000218

Symbol: EMC_STA_WTURN0_OFS
   Definitions
      At line 414 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WTURN0_OFS unused
EMC_STA_WTURN0_Val 0000000F

Symbol: EMC_STA_WTURN0_Val
   Definitions
      At line 512 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WTURN0_Val unused
EMC_STA_WTURN1_OFS 00000238

Symbol: EMC_STA_WTURN1_OFS
   Definitions
      At line 421 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WTURN1_OFS unused
EMC_STA_WTURN1_Val 0000000F

Symbol: EMC_STA_WTURN1_Val
   Definitions
      At line 576 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WTURN1_Val unused
EMC_STA_WWEN0_OFS 00000204

Symbol: EMC_STA_WWEN0_OFS
   Definitions
      At line 409 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WWEN0_OFS unused
EMC_STA_WWEN0_Val 00000002

Symbol: EMC_STA_WWEN0_Val
   Definitions
      At line 477 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WWEN0_Val unused



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

EMC_STA_WWEN1_OFS 00000224

Symbol: EMC_STA_WWEN1_OFS
   Definitions
      At line 416 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WWEN1_OFS unused
EMC_STA_WWEN1_Val 00000000

Symbol: EMC_STA_WWEN1_Val
   Definitions
      At line 541 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WWEN1_Val unused
EMC_STA_WWR0_OFS 00000214

Symbol: EMC_STA_WWR0_OFS
   Definitions
      At line 413 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WWR0_OFS unused
EMC_STA_WWR0_Val 0000001F

Symbol: EMC_STA_WWR0_Val
   Definitions
      At line 505 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WWR0_Val unused
EMC_STA_WWR1_OFS 00000234

Symbol: EMC_STA_WWR1_OFS
   Definitions
      At line 420 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WWR1_OFS unused
EMC_STA_WWR1_Val 0000001F

Symbol: EMC_STA_WWR1_Val
   Definitions
      At line 569 in file LPC2300.s
   Uses
      None
Comment: EMC_STA_WWR1_Val unused
EXTMEM_BASE 80000000

Symbol: EXTMEM_BASE
   Definitions
      At line 64 in file LPC2300.s
   Uses
      None
Comment: EXTMEM_BASE unused
FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 85 in file LPC2300.s
   Uses
      At line 90 in file LPC2300.s
      At line 846 in file LPC2300.s

FLASH_BASE 00000000

Symbol: FLASH_BASE
   Definitions
      At line 62 in file LPC2300.s
   Uses
      None
Comment: FLASH_BASE unused
F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 56 in file LPC2300.s
   Uses
      At line 834 in file LPC2300.s
      At line 839 in file LPC2300.s
      At line 844 in file LPC2300.s
      At line 849 in file LPC2300.s
      At line 854 in file LPC2300.s

Heap_Size 00000100

Symbol: Heap_Size
   Definitions
      At line 104 in file LPC2300.s
   Uses
      At line 108 in file LPC2300.s
      At line 894 in file LPC2300.s

IRQ_Stack_Size 00000100

Symbol: IRQ_Stack_Size
   Definitions
      At line 86 in file LPC2300.s
   Uses
      At line 90 in file LPC2300.s
      At line 851 in file LPC2300.s

ISR_Stack_Size 00000108

Symbol: ISR_Stack_Size
   Definitions
      At line 90 in file LPC2300.s
   Uses
      At line 95 in file LPC2300.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 55 in file LPC2300.s
   Uses
      At line 834 in file LPC2300.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

      At line 839 in file LPC2300.s
      At line 844 in file LPC2300.s
      At line 849 in file LPC2300.s
      At line 854 in file LPC2300.s

MAMCR_OFS 00000000

Symbol: MAMCR_OFS
   Definitions
      At line 366 in file LPC2300.s
   Uses
      None
Comment: MAMCR_OFS unused
MAMCR_Val 00000002

Symbol: MAMCR_Val
   Definitions
      At line 381 in file LPC2300.s
   Uses
      None
Comment: MAMCR_Val unused
MAMTIM_OFS 00000004

Symbol: MAMTIM_OFS
   Definitions
      At line 367 in file LPC2300.s
   Uses
      None
Comment: MAMTIM_OFS unused
MAMTIM_Val 00000004

Symbol: MAMTIM_Val
   Definitions
      At line 382 in file LPC2300.s
   Uses
      None
Comment: MAMTIM_Val unused
MAM_BASE E01FC000

Symbol: MAM_BASE
   Definitions
      At line 365 in file LPC2300.s
   Uses
      None
Comment: MAM_BASE unused
MAM_SETUP 00000000

Symbol: MAM_SETUP
   Definitions
      At line 380 in file LPC2300.s
   Uses
      At line 718 in file LPC2300.s
Comment: MAM_SETUP used once
MEMMAP E01FC040

Symbol: MEMMAP
   Definitions
      At line 815 in file LPC2300.s
   Uses



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

      None
Comment: MEMMAP unused
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 51 in file LPC2300.s
   Uses
      At line 839 in file LPC2300.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 48 in file LPC2300.s
   Uses
      At line 844 in file LPC2300.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 49 in file LPC2300.s
   Uses
      At line 849 in file LPC2300.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 50 in file LPC2300.s
   Uses
      At line 854 in file LPC2300.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 53 in file LPC2300.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 52 in file LPC2300.s
   Uses
      At line 834 in file LPC2300.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 47 in file LPC2300.s
   Uses
      At line 859 in file LPC2300.s
Comment: Mode_USR used once
OSCEN 00000020



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols


Symbol: OSCEN
   Definitions
      At line 131 in file LPC2300.s
   Uses
      At line 655 in file LPC2300.s
Comment: OSCEN used once
OSCRANGE 00000010

Symbol: OSCRANGE
   Definitions
      At line 130 in file LPC2300.s
   Uses
      None
Comment: OSCRANGE unused
OSCSTAT 00000040

Symbol: OSCSTAT
   Definitions
      At line 132 in file LPC2300.s
   Uses
      At line 657 in file LPC2300.s
Comment: OSCSTAT used once
PCB_BASE E002C000

Symbol: PCB_BASE
   Definitions
      At line 387 in file LPC2300.s
   Uses
      None
Comment: PCB_BASE unused
PCLKSEL0_OFS 000001A8

Symbol: PCLKSEL0_OFS
   Definitions
      At line 123 in file LPC2300.s
   Uses
      At line 701 in file LPC2300.s
Comment: PCLKSEL0_OFS used once
PCLKSEL0_Val 00000044

Symbol: PCLKSEL0_Val
   Definitions
      At line 359 in file LPC2300.s
   Uses
      At line 700 in file LPC2300.s
Comment: PCLKSEL0_Val used once
PCLKSEL1_OFS 000001AC

Symbol: PCLKSEL1_OFS
   Definitions
      At line 124 in file LPC2300.s
   Uses
      At line 703 in file LPC2300.s
Comment: PCLKSEL1_OFS used once
PCLKSEL1_Val 00000000

Symbol: PCLKSEL1_Val
   Definitions



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

      At line 360 in file LPC2300.s
   Uses
      At line 702 in file LPC2300.s
Comment: PCLKSEL1_Val used once
PCONP_OFS 000000C4

Symbol: PCONP_OFS
   Definitions
      At line 127 in file LPC2300.s
   Uses
      At line 712 in file LPC2300.s
Comment: PCONP_OFS used once
PCONP_Val 04280FDE

Symbol: PCONP_Val
   Definitions
      At line 361 in file LPC2300.s
   Uses
      At line 711 in file LPC2300.s
Comment: PCONP_Val used once
PCON_OFS 000000C0

Symbol: PCON_OFS
   Definitions
      At line 126 in file LPC2300.s
   Uses
      None
Comment: PCON_OFS unused
PINSEL0_OFS 00000000

Symbol: PINSEL0_OFS
   Definitions
      At line 388 in file LPC2300.s
   Uses
      None
Comment: PINSEL0_OFS unused
PINSEL10_OFS 00000028

Symbol: PINSEL10_OFS
   Definitions
      At line 398 in file LPC2300.s
   Uses
      None
Comment: PINSEL10_OFS unused
PINSEL1_OFS 00000004

Symbol: PINSEL1_OFS
   Definitions
      At line 389 in file LPC2300.s
   Uses
      None
Comment: PINSEL1_OFS unused
PINSEL2_OFS 00000008

Symbol: PINSEL2_OFS
   Definitions
      At line 390 in file LPC2300.s
   Uses
      None



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

Comment: PINSEL2_OFS unused
PINSEL3_OFS 0000000C

Symbol: PINSEL3_OFS
   Definitions
      At line 391 in file LPC2300.s
   Uses
      None
Comment: PINSEL3_OFS unused
PINSEL4_OFS 00000010

Symbol: PINSEL4_OFS
   Definitions
      At line 392 in file LPC2300.s
   Uses
      None
Comment: PINSEL4_OFS unused
PINSEL5_OFS 00000014

Symbol: PINSEL5_OFS
   Definitions
      At line 393 in file LPC2300.s
   Uses
      None
Comment: PINSEL5_OFS unused
PINSEL6_OFS 00000018

Symbol: PINSEL6_OFS
   Definitions
      At line 394 in file LPC2300.s
   Uses
      None
Comment: PINSEL6_OFS unused
PINSEL7_OFS 0000001C

Symbol: PINSEL7_OFS
   Definitions
      At line 395 in file LPC2300.s
   Uses
      None
Comment: PINSEL7_OFS unused
PINSEL8_OFS 00000020

Symbol: PINSEL8_OFS
   Definitions
      At line 396 in file LPC2300.s
   Uses
      None
Comment: PINSEL8_OFS unused
PINSEL9_OFS 00000024

Symbol: PINSEL9_OFS
   Definitions
      At line 397 in file LPC2300.s
   Uses
      None
Comment: PINSEL9_OFS unused
PLLCFG_OFS 00000084




ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Absolute symbols

Symbol: PLLCFG_OFS
   Definitions
      At line 116 in file LPC2300.s
   Uses
      At line 664 in file LPC2300.s
Comment: PLLCFG_OFS used once
PLLCFG_Val 0000000E

Symbol: PLLCFG_Val
   Definitions
      At line 356 in file LPC2300.s
   Uses
      At line 663 in file LPC2300.s
      At line 687 in file LPC2300.s

PLLCON_OFS 00000080

Symbol: PLLCON_OFS
   Definitions
      At line 115 in file LPC2300.s
   Uses
      At line 668 in file LPC2300.s
      At line 707 in file LPC2300.s

PLLCON_PLLC 00000002

Symbol: PLLCON_PLLC
   Definitions
      At line 134 in file LPC2300.s
   Uses
      At line 706 in file LPC2300.s
Comment: PLLCON_PLLC used once
PLLCON_PLLE 00000001

Symbol: PLLCON_PLLE
   Definitions
      At line 133 in file LPC2300.s
   Uses
      At line 667 in file LPC2300.s
      At line 706 in file LPC2300.s

PLLFEED_OFS 0000008C

Symbol: PLLFEED_OFS
   Definitions
      At line 118 in file LPC2300.s
   Uses
      At line 665 in file LPC2300.s
      At line 666 in file LPC2300.s
      At line 669 in file LPC2300.s
      At line 670 in file LPC2300.s
      At line 708 in file LPC2300.s
      At line 709 in file LPC2300.s

PLLSTAT_M 00007FFF

Symbol: PLLSTAT_M
   Definitions
      At line 135 in file LPC2300.s



ARM Macro Assembler    Page 15 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 685 in file LPC2300.s
Comment: PLLSTAT_M used once
PLLSTAT_N 00FF0000

Symbol: PLLSTAT_N
   Definitions
      At line 136 in file LPC2300.s
   Uses
      At line 685 in file LPC2300.s
Comment: PLLSTAT_N used once
PLLSTAT_OFS 00000088

Symbol: PLLSTAT_OFS
   Definitions
      At line 117 in file LPC2300.s
   Uses
      At line 674 in file LPC2300.s
      At line 684 in file LPC2300.s

PLLSTAT_PLOCK 04000000

Symbol: PLLSTAT_PLOCK
   Definitions
      At line 137 in file LPC2300.s
   Uses
      At line 675 in file LPC2300.s
Comment: PLLSTAT_PLOCK used once
RAM_BASE 40000000

Symbol: RAM_BASE
   Definitions
      At line 63 in file LPC2300.s
   Uses
      None
Comment: RAM_BASE unused
SCB_BASE E01FC000

Symbol: SCB_BASE
   Definitions
      At line 114 in file LPC2300.s
   Uses
      At line 647 in file LPC2300.s
Comment: SCB_BASE used once
SCS_OFS 000001A0

Symbol: SCS_OFS
   Definitions
      At line 122 in file LPC2300.s
   Uses
      At line 653 in file LPC2300.s
      At line 656 in file LPC2300.s

SCS_Val 00000020

Symbol: SCS_Val
   Definitions
      At line 354 in file LPC2300.s
   Uses



ARM Macro Assembler    Page 16 Alphabetic symbol ordering
Absolute symbols

      At line 652 in file LPC2300.s
      At line 655 in file LPC2300.s

STA_MEM0_BASE 80000000

Symbol: STA_MEM0_BASE
   Definitions
      At line 67 in file LPC2300.s
   Uses
      None
Comment: STA_MEM0_BASE unused
STA_MEM1_BASE 81000000

Symbol: STA_MEM1_BASE
   Definitions
      At line 68 in file LPC2300.s
   Uses
      None
Comment: STA_MEM1_BASE unused
SVC_Stack_Size 00000008

Symbol: SVC_Stack_Size
   Definitions
      At line 83 in file LPC2300.s
   Uses
      At line 90 in file LPC2300.s
      At line 856 in file LPC2300.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 82 in file LPC2300.s
   Uses
      At line 90 in file LPC2300.s
      At line 836 in file LPC2300.s

USBCLKCFG_OFS 00000108

Symbol: USBCLKCFG_OFS
   Definitions
      At line 120 in file LPC2300.s
   Uses
      At line 697 in file LPC2300.s
Comment: USBCLKCFG_OFS used once
USBCLKCFG_Val 00000005

Symbol: USBCLKCFG_Val
   Definitions
      At line 358 in file LPC2300.s
   Uses
      At line 696 in file LPC2300.s
Comment: USBCLKCFG_Val used once
USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 87 in file LPC2300.s
   Uses



ARM Macro Assembler    Page 17 Alphabetic symbol ordering
Absolute symbols

      At line 94 in file LPC2300.s
      At line 867 in file LPC2300.s
      At line 893 in file LPC2300.s

115 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

UART0_Int 00000000

Symbol: UART0_Int
   Definitions
      At line 616 in file LPC2300.s
   Uses
      At line 617 in file LPC2300.s
Comment: UART0_Int used once
__main 00000000

Symbol: __main
   Definitions
      At line 874 in file LPC2300.s
   Uses
      At line 875 in file LPC2300.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 888 in file LPC2300.s
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
495 symbols in table
